function e(e){window.innerWidth>800&&$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")}jQuery((function(){"use strict";if($(".nav-toggle-btn").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").toggleClass("active")})),$(".nav-backdrop-container").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")})),$(".magnific-popup-link").magnificPopup({type:"image",gallery:{enabled:!0},image:{titleSrc:"title"}}),$(".back-to-top").length){const e=100,t=function(){$(window).scrollTop()>e?$(".back-to-top").addClass("show"):($(".back-to-top").removeClass("show"),$(".show-fire").removeClass("show"))};t(),$(window).on("scroll",(function(){t()})),$(".back-to-top").on("click",(function(e){e.preventDefault(),$(".show-fire").addClass("show"),$("html,body").animate({scrollTop:0},50)}))}})),document.querySelector(".nav-desktop__list").addEventListener("click",(function(e){if(e.preventDefault(),e.target.classList.contains("nav-desktop__link")){const t=e.target.getAttribute("href");document.querySelector(t).scrollIntoView({behavior:"smooth"})}})),e(),window.addEventListener("resize",e),document.addEventListener("keydown",e=>{"Escape"===e.key&&(document.querySelector(".nav-backdrop-container").classList.remove("active"),document.querySelector(".nav-toggle-btn").classList.remove("active"))});const t=document.querySelector(".nav-desktop"),n=function(e,t){if(e.target.classList.contains("nav-desktop__link")){const t=e.target;t.closest(".nav-desktop").querySelectorAll(".nav-desktop__link").forEach(e=>{e!==t&&(e.style.opacity=this)})}};t.addEventListener("mouseover",n.bind(.3)),t.addEventListener("mouseout",n.bind(1));const o=document.querySelector(".header"),s=document.querySelector("main"),c=o.getBoundingClientRect().height,a=function(e){const[t]=e;t.isIntersecting?o.classList.remove("sticky"):o.classList.add("sticky")},i=new IntersectionObserver(a,{root:null,threshold:0,rootMargin:`-${c}px`});async function l(){const e=new Request("https://milanzivanov.github.io/Data/works.json"),t=await fetch(e),n=await t.json();r(n),d(n)}function r(e){const t=document.querySelector(".skills-container-icons"),n=e.skills;let o="";for(const e of n)o+=`\n      <div class="skill-icon">\n        <i \n          class="${e.iconClass}"\n          data-aos="fade-up">\n        </i>\n        <p>${e.iconTitle}</p>\n      </div>\n    `;t.innerHTML=o}function d(e){const t=document.querySelector(".projects__content"),n=e.works;for(const e of n){const n=document.createElement("div");n.className="projects__row",n.setAttribute("data-aos","flip-left");const o=document.createElement("div");o.classList.add("projects__row--img"),n.appendChild(o);const s=document.createElement("a");s.className="magnific-popup-link",s.href=e.linkSrc,s.rel="dns-prefetch",s.target="_blank";const c=document.createElement("img");c.src=e.src,c.setAttribute("loading","lazy");const a=document.createElement("div");a.className="projects__row--text",n.appendChild(a);const i=document.createElement("div");i.classList.add("text-container"),a.appendChild(i);const l=document.createElement("h3");l.className="section-h3-title project-container--title",l.textContent=e.title,i.appendChild(l);const r=document.createElement("div");r.classList.add("text-container--description"),i.appendChild(r);const d=document.createElement("p");d.className="paragraph-text paragraph-text--border-bottom",d.textContent=e.body,r.appendChild(d);const p=document.createElement("p");p.classList.add("paragraph-text"),p.textContent=e.projectTime,r.appendChild(p);const u=document.createElement("div");u.classList.add("skill-container"),r.appendChild(u);const m=document.createElement("p");m.classList.add("paragraph-strong"),m.textContent="Skill used:",u.appendChild(m);const v=document.createElement("ul");v.classList.add("list-icon-container"),u.appendChild(v),o.appendChild(s),s.appendChild(c);const h=document.createElement("a");h.className="popup-link btn btn--size btn--theme",h.href=e.linkSrc,h.target="_blank",h.rel="dns-prefetch",h.textContent="View It Here",i.appendChild(h),t.appendChild(n);const g=e.technologiesUsed;for(const e of g){const t=document.createElement("li"),n=document.createElement("i");n.className=e.svgIcon+" devicon",v.appendChild(t),t.appendChild(n)}}}i.observe(s),$(".slick-slider").slick({slidesToShow:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:1e4,cssEase:"ease-out",asNavFor:".slider-nav",prevArrow:$(".left-nav-custom"),nextArrow:$(".right-nav-custom")}),$(".slider-nav").slick({arrows:!1,slidesToShow:3,slidesToScroll:1,asNavFor:".slick-slider",dots:!1,centerMode:!0,focusOnSelect:!0}),AOS.init({}),l();const p=document.getElementById("date");p.innerHTML=(new Date).getFullYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicmVtb3ZlTWVudU9uUmVzaXplSWZBY3RpdmUiLCJlIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIiQiLCJyZW1vdmVDbGFzcyIsImpRdWVyeSIsIm9uIiwidG9nZ2xlQ2xhc3MiLCJtYWduaWZpY1BvcHVwIiwidHlwZSIsImdhbGxlcnkiLCJlbmFibGVkIiwiaW1hZ2UiLCJ0aXRsZVNyYyIsImxlbmd0aCIsInNjcm9sbFRyaWdnZXIiLCJiYWNrVG9Ub3AiLCJzY3JvbGxUb3AiLCJhZGRDbGFzcyIsInByZXZlbnREZWZhdWx0IiwiYW5pbWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImlkIiwiZ2V0QXR0cmlidXRlIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImtleSIsInJlbW92ZSIsIm5hdiIsImhhbmRsZUhvdmVyIiwib3BhY2l0eSIsImxpbmsiLCJjbG9zZXN0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbCIsInN0eWxlIiwidGhpcyIsImJpbmQiLCJoZWFkZXIiLCJtYWluIiwiaGVhZGVySGVpZ2h0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaGVpZ2h0Iiwic3RpY2t5TmF2IiwiZW50cmllcyIsImVudHJ5IiwiaXNJbnRlcnNlY3RpbmciLCJhZGQiLCJoZWFkZXJPYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwicm9vdCIsInRocmVzaG9sZCIsInJvb3RNYXJnaW4iLCJhc3luYyIsInBvcHVsYXRlIiwicmVxdWVzdCIsIlJlcXVlc3QiLCJyZXMiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwicG9wdWxhdGVTa2lsbHMiLCJwb3B1bGF0ZVdvcmtzIiwiY29udGFpbmVyU2tpbGxzIiwic2tpbGxzIiwib3V0cHV0Iiwic2tpbGwiLCJpY29uQ2xhc3MiLCJpY29uVGl0bGUiLCJpbm5lckhUTUwiLCJzZWN0aW9uIiwid29ya3MiLCJ3b3JrIiwiY29udGFpbmVyUHJvamVjdHMiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwic2V0QXR0cmlidXRlIiwicHJvamVjdFJvd0ltZyIsImFwcGVuZENoaWxkIiwicHJvamVjdEFuY2hvckxpbmsiLCJocmVmIiwibGlua1NyYyIsInJlbCIsImltZ1Byb2plY3QiLCJzcmMiLCJwcm9qZWN0Um93VGV4dCIsInRleHRDb250YWluZXIiLCJoM1RpdGxlUm93VGV4dCIsInRleHRDb250ZW50IiwidGl0bGUiLCJyb3dUZXh0RGl2Iiwicm93VGV4dFBhcmFncmFwaCIsImJvZHkiLCJyb3dUZXh0VGltZSIsInByb2plY3RUaW1lIiwic2tpbGxDb250YWluZXIiLCJyb3dUZXh0U3Ryb25nIiwic2tpbGxMaXN0IiwiYnRuVGV4dFJvdyIsInNraWxsc1VzZWQiLCJ0ZWNobm9sb2dpZXNVc2VkIiwibGlzdEl0ZW0iLCJsaXN0SWNvbiIsInN2Z0ljb24iLCJvYnNlcnZlIiwic2xpY2siLCJzbGlkZXNUb1Nob3ciLCJhcnJvd3MiLCJkb3RzIiwiYXV0b3BsYXkiLCJhdXRvcGxheVNwZWVkIiwiY3NzRWFzZSIsImFzTmF2Rm9yIiwicHJldkFycm93IiwibmV4dEFycm93Iiwic2xpZGVzVG9TY3JvbGwiLCJjZW50ZXJNb2RlIiwiZm9jdXNPblNlbGVjdCIsIkFPUyIsImluaXQiLCJkYXRlIiwiZ2V0RWxlbWVudEJ5SWQiLCJEYXRlIiwiZ2V0RnVsbFllYXIiXSwibWFwcGluZ3MiOiJBQXlFQSxTQUFTQSxFQUEyQkMsR0FDOUJDLE9BQU9DLFdBQWEsS0FDdEJDLEVBQUUsNENBQTRDQyxZQUFZLFVBM0U5REMsUUFBTyxXQUNMLGFBMEJBLEdBeEJBRixFQUFFLG1CQUFtQkcsR0FBRyxTQUFTLFNBQVVOLEdBQ3pDRyxFQUFFLDRDQUE0Q0ksWUFBWSxhQUc1REosRUFBRSwyQkFBMkJHLEdBQUcsU0FBUyxTQUFVTixHQUNqREcsRUFBRSw0Q0FBNENDLFlBQVksYUFJNURE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InVzZSBzdHJpY3RcIjtcclxuICAvLyBvcGVuIG1vYmlsZSBtZW51IGFuZCBoYW1idXJnZXIgYnRuXHJcbiAgJChcIi5uYXYtdG9nZ2xlLWJ0blwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAkKFwiLm5hdi10b2dnbGUtYnRuLCAubmF2LWJhY2tkcm9wLWNvbnRhaW5lclwiKS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICB9KTtcclxuXHJcbiAgJChcIi5uYXYtYmFja2Ryb3AtY29udGFpbmVyXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICQoXCIubmF2LXRvZ2dsZS1idG4sIC5uYXYtYmFja2Ryb3AtY29udGFpbmVyXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBNYWduaWZpYyBwb3B1cFxyXG4gICQoXCIubWFnbmlmaWMtcG9wdXAtbGlua1wiKS5tYWduaWZpY1BvcHVwKHtcclxuICAgIHR5cGU6IFwiaW1hZ2VcIixcclxuICAgIC8vIG90aGVyIG9wdGlvbnNcclxuICAgIGdhbGxlcnk6IHtcclxuICAgICAgLy8gb3B0aW9ucyBmb3IgZ2FsbGVyeVxyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIGltYWdlOiB7XHJcbiAgICAgIC8vIG9wdGlvbnMgZm9yIGltYWdlIGNvbnRlbnQgdHlwZVxyXG4gICAgICB0aXRsZVNyYzogXCJ0aXRsZVwiLFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiAgLy8gYnR0XHJcbiAgaWYgKCQoXCIuYmFjay10by10b3BcIikubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBzY3JvbGxUcmlnZ2VyID0gMTAwLCAvLyBweFxyXG4gICAgICBiYWNrVG9Ub3AgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc3Qgc2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgICAgIGlmIChzY3JvbGxUb3AgPiBzY3JvbGxUcmlnZ2VyKSB7XHJcbiAgICAgICAgICAkKFwiLmJhY2stdG8tdG9wXCIpLmFkZENsYXNzKFwic2hvd1wiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJChcIi5iYWNrLXRvLXRvcFwiKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XHJcbiAgICAgICAgICAkKFwiLnNob3ctZmlyZVwiKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgYmFja1RvVG9wKCk7XHJcbiAgICAkKHdpbmRvdykub24oXCJzY3JvbGxcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICBiYWNrVG9Ub3AoKTtcclxuICAgIH0pO1xyXG4gICAgJChcIi5iYWNrLXRvLXRvcFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICQoXCIuc2hvdy1maXJlXCIpLmFkZENsYXNzKFwic2hvd1wiKTtcclxuXHJcbiAgICAgICQoXCJodG1sLGJvZHlcIikuYW5pbWF0ZShcclxuICAgICAgICB7XHJcbiAgICAgICAgICBzY3JvbGxUb3A6IDAsXHJcbiAgICAgICAgfSxcclxuICAgICAgICA1MFxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIFNjcm9sbCB0byBzZWN0aW9uIHdpdGggZXZlbnQgZGVsYWdhdGlvbiBiZXR0ZXIgYXBwcm9hY2hcclxuZG9jdW1lbnRcclxuICAucXVlcnlTZWxlY3RvcihcIi5uYXYtZGVza3RvcF9fbGlzdFwiKVxyXG4gIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAvLyBNYXRjaGluZyBzdHJhdGVneVxyXG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm5hdi1kZXNrdG9wX19saW5rXCIpKSB7XHJcbiAgICAgIGNvbnN0IGlkID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpZCkuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBSZW1vdmUgYWN0aXZlIG1lbnUgbW9iaWxlIG9uIHJlc2l6ZSBpZiBpdCBpcyBhY3RpdmUgYnV0IHRoaXMgc2NlbmFyaW8gaXMgbm90IHJlYWwgaW4gcmVhbCBzaXR1YXRpb25cclxuZnVuY3Rpb24gcmVtb3ZlTWVudU9uUmVzaXplSWZBY3RpdmUoZSkge1xyXG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDgwMCkge1xyXG4gICAgJChcIi5uYXYtdG9nZ2xlLWJ0biwgLm5hdi1iYWNrZHJvcC1jb250YWluZXJcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgfVxyXG59XHJcblxyXG5yZW1vdmVNZW51T25SZXNpemVJZkFjdGl2ZSgpO1xyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCByZW1vdmVNZW51T25SZXNpemVJZkFjdGl2ZSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gUmVtb3ZlIGFjdGl2ZSBzdGF0ZSBmcm9tIG1vYmlsZSBtZW51IHdpdGgga2V5IGVzY2FwZVxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZSkgPT4ge1xyXG4gIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIubmF2LWJhY2tkcm9wLWNvbnRhaW5lclwiKVxyXG4gICAgICAuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2LXRvZ2dsZS1idG5cIikuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIE5hdiBsaW5rIGVmZmVjdFxyXG5jb25zdCBuYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdi1kZXNrdG9wXCIpO1xyXG5cclxuLy8gUmVmYWN0b3JpbmdcclxuY29uc3QgaGFuZGxlSG92ZXIgPSBmdW5jdGlvbiAoZSwgb3BhY2l0eSkge1xyXG4gIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJuYXYtZGVza3RvcF9fbGlua1wiKSkge1xyXG4gICAgY29uc3QgbGluayA9IGUudGFyZ2V0O1xyXG4gICAgY29uc3Qgc2libGluZ3MgPSBsaW5rXHJcbiAgICAgIC5jbG9zZXN0KFwiLm5hdi1kZXNrdG9wXCIpXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLm5hdi1kZXNrdG9wX19saW5rXCIpO1xyXG5cclxuICAgIHNpYmxpbmdzLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGlmIChlbCAhPT0gbGluaykge1xyXG4gICAgICAgIGVsLnN0eWxlLm9wYWNpdHkgPSB0aGlzO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbi8vIGRlc2t0b3AgbmF2XHJcbm5hdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsIGhhbmRsZUhvdmVyLmJpbmQoMC4zKSk7XHJcbm5hdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgaGFuZGxlSG92ZXIuYmluZCgxKSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIFN0aWNreU5hdlxyXG5jb25zdCBoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlclwiKTtcclxuY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xyXG5jb25zdCBoZWFkZXJIZWlnaHQgPSBoZWFkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xyXG4vLyBjb25zb2xlLmxvZyhoZWFkZXJIZWlnaHQpO1xyXG5cclxuY29uc3Qgc3RpY2t5TmF2ID0gZnVuY3Rpb24gKGVudHJpZXMpIHtcclxuICBjb25zdCBbZW50cnldID0gZW50cmllcztcclxuICAvLyBjb25zb2xlLmxvZyhlbnRyeSk7XHJcblxyXG4gIGlmICghZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKFwic3RpY2t5XCIpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcInN0aWNreVwiKTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBoZWFkZXJPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihzdGlja3lOYXYsIHtcclxuICByb290OiBudWxsLFxyXG4gIHRocmVzaG9sZDogMCxcclxuICByb290TWFyZ2luOiBgLSR7aGVhZGVySGVpZ2h0fXB4YCxcclxufSk7XHJcblxyXG5oZWFkZXJPYnNlcnZlci5vYnNlcnZlKG1haW4pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBTbGlja1xyXG4kKFwiLnNsaWNrLXNsaWRlclwiKS5zbGljayh7XHJcbiAgc2xpZGVzVG9TaG93OiAxLFxyXG4gIGFycm93czogdHJ1ZSxcclxuICBkb3RzOiBmYWxzZSxcclxuICBhdXRvcGxheTogdHJ1ZSxcclxuICBhdXRvcGxheVNwZWVkOiAxMDAwMCxcclxuICBjc3NFYXNlOiBcImVhc2Utb3V0XCIsXHJcbiAgYXNOYXZGb3I6IFwiLnNsaWRlci1uYXZcIixcclxuICBwcmV2QXJyb3c6ICQoXCIubGVmdC1uYXYtY3VzdG9tXCIpLFxyXG4gIG5leHRBcnJvdzogJChcIi5yaWdodC1uYXYtY3VzdG9tXCIpLFxyXG59KTtcclxuXHJcbiQoXCIuc2xpZGVyLW5hdlwiKS5zbGljayh7XHJcbiAgYXJyb3dzOiBmYWxzZSxcclxuICBzbGlkZXNUb1Nob3c6IDMsXHJcbiAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgYXNOYXZGb3I6IFwiLnNsaWNrLXNsaWRlclwiLFxyXG4gIGRvdHM6IGZhbHNlLFxyXG4gIGNlbnRlck1vZGU6IHRydWUsXHJcbiAgZm9jdXNPblNlbGVjdDogdHJ1ZSxcclxufSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBwYXJ0aWNsZXNqc1xyXG4vLyBwYXJ0aWNsZXNKUyhcInBhcnRpY2xlcy1qc1wiLCB7XHJcbi8vICAgcGFydGljbGVzOiB7XHJcbi8vICAgICBudW1iZXI6IHtcclxuLy8gICAgICAgdmFsdWU6IDY1LFxyXG4vLyAgICAgfSxcclxuLy8gICAgIGNvbG9yOiB7XHJcbi8vICAgICAgIHZhbHVlOiBcIiNkZGRcIixcclxuLy8gICAgIH0sXHJcbi8vICAgICBzaGFwZToge1xyXG4vLyAgICAgICB0eXBlOiBcImNpcmNsZVwiLFxyXG4vLyAgICAgICBzdHJva2U6IHtcclxuLy8gICAgICAgICB3aWR0aDogMSxcclxuLy8gICAgICAgICBjb2xvcjogXCIjZGRkXCIsXHJcbi8vICAgICAgIH0sXHJcbi8vICAgICB9LFxyXG4vLyAgICAgaW1hZ2U6IHtcclxuLy8gICAgICAgc3JjOiBcInNvbWUgbGlua1wiLFxyXG4vLyAgICAgfSxcclxuLy8gICAgIG9wYWNpdHk6IHtcclxuLy8gICAgICAgdmFsdWU6IDAuNSxcclxuLy8gICAgICAgcmFuZG9tOiB0cnVlLFxyXG4vLyAgICAgICBhbmltOiB7XHJcbi8vICAgICAgICAgZW5hYmxlOiBmYWxzZSxcclxuLy8gICAgICAgICBzcGVlZDogMSxcclxuLy8gICAgICAgfSxcclxuLy8gICAgIH0sXHJcbi8vICAgICBzaXplOiB7XHJcbi8vICAgICAgIHZhbHVlOiAzLFxyXG4vLyAgICAgICByYW5kb206IHRydWUsXHJcbi8vICAgICAgIGFuaW06IHtcclxuLy8gICAgICAgICBlbmFibGU6IGZhbHNlLFxyXG4vLyAgICAgICAgIHNwZWVkOiAxMDAsXHJcbi8vICAgICAgICAgc2l6ZV9taW46IDAuMSxcclxuLy8gICAgICAgICBzeW5jOiBmYWxzZSxcclxuLy8gICAgICAgfSxcclxuLy8gICAgIH0sXHJcbi8vICAgICBsaW5lX2xpbmtlZDoge1xyXG4vLyAgICAgICBlbmFibGU6IHRydWUsXHJcbi8vICAgICAgIGRpc3RhbmNlOiAxNTAsXHJcbi8vICAgICAgIGNvbG9yOiBcIiNkZGRcIixcclxuLy8gICAgICAgd2lkdGg6IDEsXHJcbi8vICAgICB9LFxyXG4vLyAgICAgbW92ZToge1xyXG4vLyAgICAgICBlbmFibGU6IHRydWUsXHJcbi8vICAgICAgIHNwZWVkOiAxLFxyXG4vLyAgICAgICBkaXJlY3Rpb246IFwibm9uZVwiLFxyXG4vLyAgICAgfSxcclxuLy8gICB9LFxyXG4vLyAgIGludGVyYWN0aXZpdHk6IHtcclxuLy8gICAgIGV2ZW50czoge1xyXG4vLyAgICAgICBvbmhvdmVyOiB7XHJcbi8vICAgICAgICAgZW5hYmxlOiB0cnVlLFxyXG4vLyAgICAgICAgIG1vZGU6IFwicmVwdWxzZVwiLFxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgICBvbmNsaWNrOiB7XHJcbi8vICAgICAgICAgZW5hYmxlOiB0cnVlLFxyXG4vLyAgICAgICAgIG1vZGU6IFwicHVzaFwiLFxyXG4vLyAgICAgICB9LFxyXG4vLyAgICAgfSxcclxuLy8gICAgIG1vZGVzOiB7XHJcbi8vICAgICAgIHJlcHVsc2U6IHtcclxuLy8gICAgICAgICBkaXN0YW5jZTogNTAsXHJcbi8vICAgICAgICAgZHVyYXRpb246IDAuNCxcclxuLy8gICAgICAgfSxcclxuLy8gICAgIH0sXHJcbi8vICAgfSxcclxuLy8gfSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIEFPU1xyXG4vLyBhbmltYXRpb25cclxuQU9TLmluaXQoe30pO1xyXG5cclxuLy8ganNvbiBmaWxlIHdpdGggbXkgZmUgd29ya3NcclxuYXN5bmMgZnVuY3Rpb24gcG9wdWxhdGUoKSB7XHJcbiAgY29uc3QgcmVxdWVzdFVSTCA9IFwiaHR0cHM6Ly9taWxhbnppdmFub3YuZ2l0aHViLmlvL0RhdGEvd29ya3MuanNvblwiO1xyXG4gIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChyZXF1ZXN0VVJMKTtcclxuXHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2gocmVxdWVzdCk7XHJcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XHJcblxyXG4gIHBvcHVsYXRlU2tpbGxzKGRhdGEpO1xyXG4gIHBvcHVsYXRlV29ya3MoZGF0YSk7XHJcbn1cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gc2tpbGxzIGRhdGFcclxuZnVuY3Rpb24gcG9wdWxhdGVTa2lsbHMoZGF0YSkge1xyXG4gIGNvbnN0IGNvbnRhaW5lclNraWxscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2tpbGxzLWNvbnRhaW5lci1pY29uc1wiKTtcclxuICBjb25zdCBza2lsbHMgPSBkYXRhLnNraWxscztcclxuXHJcbiAgbGV0IG91dHB1dCA9IFwiXCI7XHJcblxyXG4gIGZvciAoY29uc3Qgc2tpbGwgb2Ygc2tpbGxzKSB7XHJcbiAgICBvdXRwdXQgKz0gYFxyXG4gICAgICA8ZGl2IGNsYXNzPVwic2tpbGwtaWNvblwiPlxyXG4gICAgICAgIDxpIFxyXG4gICAgICAgICAgY2xhc3M9XCIke3NraWxsLmljb25DbGFzc31cIlxyXG4gICAgICAgICAgZGF0YS1hb3M9XCJmYWRlLXVwXCI+XHJcbiAgICAgICAgPC9pPlxyXG4gICAgICAgIDxwPiR7c2tpbGwuaWNvblRpdGxlfTwvcD5cclxuICAgICAgPC9kaXY+XHJcbiAgICBgO1xyXG4gIH1cclxuXHJcbiAgY29udGFpbmVyU2tpbGxzLmlubmVySFRNTCA9IG91dHB1dDtcclxufVxyXG5cclxuLy8gd29ya3MgZGF0YVxyXG5mdW5jdGlvbiBwb3B1bGF0ZVdvcmtzKGRhdGEpIHtcclxuICBjb25zdCBzZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0c19fY29udGVudFwiKTtcclxuICBjb25zdCB3b3JrcyA9IGRhdGEud29ya3M7XHJcblxyXG4gIGZvciAoY29uc3Qgd29yayBvZiB3b3Jrcykge1xyXG4gICAgY29uc3QgY29udGFpbmVyUHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgY29udGFpbmVyUHJvamVjdHMuY2xhc3NOYW1lID0gXCJwcm9qZWN0c19fcm93XCI7XHJcbiAgICBjb250YWluZXJQcm9qZWN0cy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFvc1wiLCBcImZsaXAtbGVmdFwiKTtcclxuXHJcbiAgICAvL1xyXG4gICAgY29uc3QgcHJvamVjdFJvd0ltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBwcm9qZWN0Um93SW1nLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0c19fcm93LS1pbWdcIik7XHJcbiAgICBjb250YWluZXJQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0Um93SW1nKTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0QW5jaG9yTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG4gICAgcHJvamVjdEFuY2hvckxpbmsuY2xhc3NOYW1lID0gXCJtYWduaWZpYy1wb3B1cC1saW5rXCI7XHJcbiAgICBwcm9qZWN0QW5jaG9yTGluay5ocmVmID0gd29yay5saW5rU3JjO1xyXG4gICAgcHJvamVjdEFuY2hvckxpbmsucmVsID0gXCJkbnMtcHJlZmV0Y2hcIjtcclxuICAgIHByb2plY3RBbmNob3JMaW5rLnRhcmdldCA9IFwiX2JsYW5rXCI7XHJcblxyXG4gICAgY29uc3QgaW1nUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICBpbWdQcm9qZWN0LnNyYyA9IHdvcmsuc3JjO1xyXG4gICAgaW1nUHJvamVjdC5zZXRBdHRyaWJ1dGUoXCJsb2FkaW5nXCIsIFwibGF6eVwiKTtcclxuXHJcbiAgICAvL1xyXG4gICAgY29uc3QgcHJvamVjdFJvd1RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgcHJvamVjdFJvd1RleHQuY2xhc3NOYW1lID0gXCJwcm9qZWN0c19fcm93LS10ZXh0XCI7XHJcbiAgICBjb250YWluZXJQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0Um93VGV4dCk7XHJcblxyXG4gICAgY29uc3QgdGV4dENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICB0ZXh0Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0ZXh0LWNvbnRhaW5lclwiKTtcclxuICAgIHByb2plY3RSb3dUZXh0LmFwcGVuZENoaWxkKHRleHRDb250YWluZXIpO1xyXG5cclxuICAgIGNvbnN0IGgzVGl0bGVSb3dUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xyXG4gICAgaDNUaXRsZVJvd1RleHQuY2xhc3NOYW1lID0gXCJzZWN0aW9uLWgzLXRpdGxlIHByb2plY3QtY29udGFpbmVyLS10aXRsZVwiO1xyXG4gICAgaDNUaXRsZVJvd1RleHQudGV4dENvbnRlbnQgPSB3b3JrLnRpdGxlO1xyXG4gICAgdGV4dENvbnRhaW5lci5hcHBlbmRDaGlsZChoM1RpdGxlUm93VGV4dCk7XHJcblxyXG4gICAgY29uc3Qgcm93VGV4dERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICByb3dUZXh0RGl2LmNsYXNzTGlzdC5hZGQoXCJ0ZXh0LWNvbnRhaW5lci0tZGVzY3JpcHRpb25cIik7XHJcbiAgICB0ZXh0Q29udGFpbmVyLmFwcGVuZENoaWxkKHJvd1RleHREaXYpO1xyXG5cclxuICAgIGNvbnN0IHJvd1RleHRQYXJhZ3JhcGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICAgIHJvd1RleHRQYXJhZ3JhcGguY2xhc3NOYW1lID0gXCJwYXJhZ3JhcGgtdGV4dCBwYXJhZ3JhcGgtdGV4dC0tYm9yZGVyLWJvdHRvbVwiO1xyXG4gICAgcm93VGV4dFBhcmFncmFwaC50ZXh0Q29udGVudCA9IHdvcmsuYm9keTtcclxuICAgIHJvd1RleHREaXYuYXBwZW5kQ2hpbGQocm93VGV4dFBhcmFncmFwaCk7XHJcblxyXG4gICAgY29uc3Qgcm93VGV4dFRpbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuICAgIHJvd1RleHRUaW1lLmNsYXNzTGlzdC5hZGQoXCJwYXJhZ3JhcGgtdGV4dFwiKTtcclxuICAgIHJvd1RleHRUaW1lLnRleHRDb250ZW50ID0gd29yay5wcm9qZWN0VGltZTtcclxuICAgIHJvd1RleHREaXYuYXBwZW5kQ2hpbGQocm93VGV4dFRpbWUpO1xyXG5cclxuICAgIGNvbnN0IHNraWxsQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHNraWxsQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJza2lsbC1jb250YWluZXJcIik7XHJcbiAgICByb3dUZXh0RGl2LmFwcGVuZENoaWxkKHNraWxsQ29udGFpbmVyKTtcclxuXHJcbiAgICBjb25zdCByb3dUZXh0U3Ryb25nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICByb3dUZXh0U3Ryb25nLmNsYXNzTGlzdC5hZGQoXCJwYXJhZ3JhcGgtc3Ryb25nXCIpO1xyXG4gICAgcm93VGV4dFN0cm9uZy50ZXh0Q29udGVudCA9IFwiU2tpbGwgdXNlZDpcIjtcclxuICAgIHNraWxsQ29udGFpbmVyLmFwcGVuZENoaWxkKHJvd1RleHRTdHJvbmcpO1xyXG5cclxuICAgIGNvbnN0IHNraWxsTGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcclxuICAgIHNraWxsTGlzdC5jbGFzc0xpc3QuYWRkKFwibGlzdC1pY29uLWNvbnRhaW5lclwiKTtcclxuICAgIHNraWxsQ29udGFpbmVyLmFwcGVuZENoaWxkKHNraWxsTGlzdCk7XHJcblxyXG4gICAgcHJvamVjdFJvd0ltZy5hcHBlbmRDaGlsZChwcm9qZWN0QW5jaG9yTGluayk7XHJcbiAgICBwcm9qZWN0QW5jaG9yTGluay5hcHBlbmRDaGlsZChpbWdQcm9qZWN0KTtcclxuXHJcbiAgICBjb25zdCBidG5UZXh0Um93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XHJcbiAgICBidG5UZXh0Um93LmNsYXNzTmFtZSA9IFwicG9wdXAtbGluayBidG4gYnRuLS1zaXplIGJ0bi0tdGhlbWVcIjtcclxuICAgIGJ0blRleHRSb3cuaHJlZiA9IHdvcmsubGlua1NyYztcclxuICAgIGJ0blRleHRSb3cudGFyZ2V0ID0gXCJfYmxhbmtcIjtcclxuICAgIGJ0blRleHRSb3cucmVsID0gXCJkbnMtcHJlZmV0Y2hcIjtcclxuICAgIGJ0blRleHRSb3cudGV4dENvbnRlbnQgPSBcIlZpZXcgSXQgSGVyZVwiO1xyXG4gICAgdGV4dENvbnRhaW5lci5hcHBlbmRDaGlsZChidG5UZXh0Um93KTtcclxuXHJcbiAgICBzZWN0aW9uLmFwcGVuZENoaWxkKGNvbnRhaW5lclByb2plY3RzKTtcclxuXHJcbiAgICAvLyB3b3JrIHNraWxsXHJcbiAgICBjb25zdCBza2lsbHNVc2VkID0gd29yay50ZWNobm9sb2dpZXNVc2VkO1xyXG4gICAgZm9yIChjb25zdCBza2lsbCBvZiBza2lsbHNVc2VkKSB7XHJcbiAgICAgIGNvbnN0IGxpc3RJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xyXG4gICAgICBjb25zdCBsaXN0SWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO1xyXG4gICAgICBsaXN0SWNvbi5jbGFzc05hbWUgPSBza2lsbC5zdmdJY29uICsgXCIgZGV2aWNvblwiO1xyXG4gICAgICBza2lsbExpc3QuYXBwZW5kQ2hpbGQobGlzdEl0ZW0pO1xyXG4gICAgICBsaXN0SXRlbS5hcHBlbmRDaGlsZChsaXN0SWNvbik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5wb3B1bGF0ZSgpO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIFNldCBkYXRlXHJcbmNvbnN0IGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGVcIik7XHJcbmRhdGUuaW5uZXJIVE1MID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG4iXX0=
