function e(e){window.innerWidth>800&&$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")}jQuery((function(){"use strict";if($(".nav-toggle-btn").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").toggleClass("active")})),$(".nav-backdrop-container").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")})),$(".magnific-popup-link").magnificPopup({type:"image",gallery:{enabled:!0},image:{titleSrc:"title"}}),$(".back-to-top").length){const e=100,t=function(){$(window).scrollTop()>e?$(".back-to-top").addClass("show"):($(".back-to-top").removeClass("show"),$(".show-fire").removeClass("show"))};t(),$(window).on("scroll",(function(){t()})),$(".back-to-top").on("click",(function(e){e.preventDefault(),$(".show-fire").addClass("show"),$("html,body").animate({scrollTop:0},50)}))}})),document.querySelector(".nav-desktop__list").addEventListener("click",(function(e){if(e.preventDefault(),e.target.classList.contains("nav-desktop__link")){const t=e.target.getAttribute("href");document.querySelector(t).scrollIntoView({behavior:"smooth"})}})),e(),window.addEventListener("resize",e),document.addEventListener("keydown",(function(e){"Escape"===e.key&&(document.querySelector(".nav-backdrop-container").classList.remove("active"),document.querySelector(".nav-toggle-btn").classList.remove("active"))}));const t=document.querySelector(".nav-desktop"),n=function(e,t){if(e.target.classList.contains("nav-desktop__link")){const t=e.target;t.closest(".nav-desktop").querySelectorAll(".nav-desktop__link").forEach(e=>{e!==t&&(e.style.opacity=this)})}};async function o(){const e=new Request("https://milanzivanov.github.io/Data/works.json"),t=await fetch(e),n=await t.json();a(n),s(n)}function a(e){const t=document.querySelector(".skills-container-icons"),n=e.skills;let o="";for(const e of n)o+=`\n      <div class="skill-icon">\n        <i \n          class="${e.iconClass}"\n          data-aos="fade-up">\n        </i>\n        <p>${e.iconTitle}</p>\n      </div>\n    `;t.innerHTML=o}function s(e){const t=document.querySelector(".projects__content"),n=e.works;for(const e of n){const n=document.createElement("div");n.className="projects__row projects__row--reverse",n.setAttribute("data-aos","flip-left");const o=document.createElement("div");o.classList.add("projects__row--img"),n.appendChild(o);const a=document.createElement("a");a.className="magnific-popup-link",a.href=e.linkSrc,a.rel="dns-prefetch",a.target="_blank";const s=document.createElement("img");s.src=e.src,s.setAttribute("loading","lazy");const c=document.createElement("div");c.className="projects__row--text",n.appendChild(c);const i=document.createElement("div");i.classList.add("text-container"),c.appendChild(i);const l=document.createElement("h3");l.className="section-h3-title project-container--title",l.textContent=e.title,i.appendChild(l);const r=document.createElement("div");r.classList.add("text-container--description"),i.appendChild(r);const d=document.createElement("p");d.className="paragraph-primary-16 paragraph-text",d.textContent=e.body,r.appendChild(d);const p=document.createElement("p");p.classList.add("paragraph-time"),p.textContent=e.projectTime,r.appendChild(p);const m=document.createElement("div");m.classList.add("skill-container"),r.appendChild(m);const u=document.createElement("p");u.classList.add("paragraph-strong"),u.textContent="Skill used:",m.appendChild(u);const v=document.createElement("ul");v.classList.add("list-icon-container"),m.appendChild(v),o.appendChild(a),a.appendChild(s);const h=document.createElement("a");h.className="popup-link btn btn--size btn--theme",h.href=e.linkSrc,h.target="_blank",h.rel="dns-prefetch",h.textContent="View It Here",i.appendChild(h),t.appendChild(n);const k=e.technologiesUsed;for(const e of k){const t=document.createElement("li"),n=document.createElement("i");n.className=e.svgIcon+" devicon",v.appendChild(t),t.appendChild(n)}}}t.addEventListener("mouseover",n.bind(.3)),t.addEventListener("mouseout",n.bind(1)),$(".slick-slider").slick({slidesToShow:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:1e4,cssEase:"ease-out",asNavFor:".slider-nav",prevArrow:$(".left-nav-custom"),nextArrow:$(".right-nav-custom")}),$(".slider-nav").slick({arrows:!1,slidesToShow:3,slidesToScroll:1,asNavFor:".slick-slider",dots:!1,centerMode:!0,focusOnSelect:!0}),particlesJS("particles-js",{particles:{number:{value:65},color:{value:"#ddd"},shape:{type:"circle",stroke:{width:1,color:"#ddd"}},image:{src:"some link"},opacity:{value:.5,random:!0,anim:{enable:!1,speed:1}},size:{value:3,random:!0,anim:{enable:!1,speed:100,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ddd",width:1},move:{enable:!0,speed:3,direction:"none"}},interactivity:{events:{onhover:{enable:!0,mode:"repulse"},onclick:{enable:!0,mode:"push"}},modes:{repulse:{distance:50,duration:.4}}}}),AOS.init({}),o();const c=document.getElementById("date");c.innerHTML=(new Date).getFullYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicmVtb3ZlTWVudU9uUmVzaXplSWZBY3RpdmUiLCJlIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIiQiLCJyZW1vdmVDbGFzcyIsImpRdWVyeSIsIm9uIiwidG9nZ2xlQ2xhc3MiLCJtYWduaWZpY1BvcHVwIiwidHlwZSIsImdhbGxlcnkiLCJlbmFibGVkIiwiaW1hZ2UiLCJ0aXRsZVNyYyIsImxlbmd0aCIsInNjcm9sbFRyaWdnZXIiLCJiYWNrVG9Ub3AiLCJzY3JvbGxUb3AiLCJhZGRDbGFzcyIsInByZXZlbnREZWZhdWx0IiwiYW5pbWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImlkIiwiZ2V0QXR0cmlidXRlIiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImtleSIsInJlbW92ZSIsIm5hdiIsImhhbmRsZUhvdmVyIiwib3BhY2l0eSIsImxpbmsiLCJjbG9zZXN0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbCIsInN0eWxlIiwidGhpcyIsImFzeW5jIiwicG9wdWxhdGUiLCJyZXF1ZXN0IiwiUmVxdWVzdCIsInJlcyIsImZldGNoIiwiZGF0YSIsImpzb24iLCJwb3B1bGF0ZVNraWxscyIsInBvcHVsYXRlV29ya3MiLCJjb250YWluZXJTa2lsbHMiLCJza2lsbHMiLCJvdXRwdXQiLCJza2lsbCIsImljb25DbGFzcyIsImljb25UaXRsZSIsImlubmVySFRNTCIsInNlY3Rpb24iLCJ3b3JrcyIsIndvcmsiLCJjb250YWluZXJQcm9qZWN0cyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJzZXRBdHRyaWJ1dGUiLCJwcm9qZWN0Um93SW1nIiwiYWRkIiwiYXBwZW5kQ2hpbGQiLCJwcm9qZWN0QW5jaG9yTGluayIsImhyZWYiLCJsaW5rU3JjIiwicmVsIiwiaW1nUHJvamVjdCIsInNyYyIsInByb2plY3RSb3dUZXh0IiwidGV4dENvbnRhaW5lciIsImgzVGl0bGVSb3dUZXh0IiwidGV4dENvbnRlbnQiLCJ0aXRsZSIsInJvd1RleHREaXYiLCJyb3dUZXh0UGFyYWdyYXBoIiwiYm9keSIsInJvd1RleHRUaW1lIiwicHJvamVjdFRpbWUiLCJza2lsbENvbnRhaW5lciIsInJvd1RleHRTdHJvbmciLCJza2lsbExpc3QiLCJidG5UZXh0Um93Iiwic2tpbGxzVXNlZCIsInRlY2hub2xvZ2llc1VzZWQiLCJsaXN0SXRlbSIsImxpc3RJY29uIiwic3ZnSWNvbiIsImJpbmQiLCJzbGljayIsInNsaWRlc1RvU2hvdyIsImFycm93cyIsImRvdHMiLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJjc3NFYXNlIiwiYXNOYXZGb3IiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJzbGlkZXNUb1Njcm9sbCIsImNlbnRlck1vZGUiLCJmb2N1c09uU2VsZWN0IiwicGFydGljbGVzSlMiLCJwYXJ0aWNsZXMiLCJudW1iZXIiLCJ2YWx1ZSIsImNvbG9yIiwic2hhcGUiLCJzdHJva2UiLCJ3aWR0aCIsInJhbmRvbSIsImFuaW0iLCJlbmFibGUiLCJzcGVlZCIsInNpemUiLCJzaXplX21pbiIsInN5bmMiLCJsaW5lX2xpbmtlZCIsImRpc3RhbmNlIiwibW92ZSIsImRpcmVjdGlvbiIsImludGVyYWN0aXZpdHkiLCJldmVudHMiLCJvbmhvdmVyIiwibW9kZSIsIm9uY2xpY2siLCJtb2RlcyIsInJlcHVsc2UiLCJkdXJhdGlvbiIsIkFPUyIsImluaXQiLCJkYXRlIiwiZ2V0RWxlbWVudEJ5SWQiLCJEYXRlIiwiZ2V0RnVsbFllYXIiXSwibWFwcGluZ3MiOiJBQThFQSxTQUFTQSxFQUEyQkMsR0FDOUJDLE9BQU9DLFdBQWEsS0FDdEJDLEVBQUUsNENBQTRDQyxZQUFZLFVBaEY5REMsUUFBTyxXQUNMLGFBK0JBLEdBN0JBRixFQUFFLG1CQUFtQkcsR0FBRyxTQUFTLFNBQVVOLEdBQ3pDRyxFQUFFLDRDQUE0Q0ksWUFBWSxh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RyxNQUFPLEdBRVRVLEtBQU0sQ0FDSlAsUUFBUSxFQUNSQyxNQUFPLEVBQ1BPLFVBQVcsU0FHZkMsY0FBZSxDQUNiQyxPQUFRLENBQ05DLFFBQVMsQ0FDUFgsUUFBUSxFQUNSWSxLQUFNLFdBRVJDLFFBQVMsQ0FDUGIsUUFBUSxFQUNSWSxLQUFNLFNBR1ZFLE1BQU8sQ0FDTEMsUUFBUyxDQUNQVCxTQUFVLEdBQ1ZVLFNBQVUsUUFTbEJDLElBQUlDLEtBQUssSUErSFQ3RixJQUlBLE1BQU04RixFQUFPckgsU0FBU3NILGVBQWUsUUFDckNELEVBQUsvRSxXQUFZLElBQUlpRixNQUFPQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsialF1ZXJ5KGZ1bmN0aW9uICgpIHtcclxuICBcInVzZSBzdHJpY3RcIjtcclxuICAvLyBvcGVuIG1vYmlsZSBtZW51IGFuZCBoYW1idXJnZXIgYnRuXHJcbiAgJChcIi5uYXYtdG9nZ2xlLWJ0blwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAkKFwiLm5hdi10b2dnbGUtYnRuLCAubmF2LWJhY2tkcm9wLWNvbnRhaW5lclwiKS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICB9KTtcclxuXHJcbiAgJChcIi5uYXYtYmFja2Ryb3AtY29udGFpbmVyXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICQoXCIubmF2LXRvZ2dsZS1idG4sIC5uYXYtYmFja2Ryb3AtY29udGFpbmVyXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG5cclxuICAvLyBNYWduaWZpYyBwb3B1cFxyXG4gICQoXCIubWFnbmlmaWMtcG9wdXAtbGlua1wiKS5tYWduaWZpY1BvcHVwKHtcclxuICAgIHR5cGU6IFwiaW1hZ2VcIixcclxuICAgIC8vIG90aGVyIG9wdGlvbnNcclxuICAgIGdhbGxlcnk6IHtcclxuICAgICAgLy8gb3B0aW9ucyBmb3IgZ2FsbGVyeVxyXG4gICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIGltYWdlOiB7XHJcbiAgICAgIC8vIG9wdGlvbnMgZm9yIGltYWdlIGNvbnRlbnQgdHlwZVxyXG4gICAgICB0aXRsZVNyYzogXCJ0aXRsZVwiLFxyXG4gICAgfSxcclxuICB9KTtcclxuXHJcbiAgLy8gcGFyYWxsYXhcclxuICAvLyBub3QgaW4gdXNlIGZvciBub3dcclxuICAvLyBsZXQgaW1hZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhYm91dC1jb250YWluZXJfX2JveC0tcGFyYWxsYXgnKTtcclxuICAvLyBuZXcgc2ltcGxlUGFyYWxsYXgoaW1hZ2UsIHt9KTtcclxuXHJcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiAgLy8gYnR0XHJcbiAgaWYgKCQoXCIuYmFjay10by10b3BcIikubGVuZ3RoKSB7XHJcbiAgICBjb25zdCBzY3JvbGxUcmlnZ2VyID0gMTAwLCAvLyBweFxyXG4gICAgICBiYWNrVG9Ub3AgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc3Qgc2Nyb2xsVG9wID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgICAgIGlmIChzY3JvbGxUb3AgPiBzY3JvbGxUcmlnZ2VyKSB7XHJcbiAgICAgICAgICAkKFwiLmJhY2stdG8tdG9wXCIpLmFkZENsYXNzKFwic2hvd1wiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJChcIi5iYWNrLXRvLXRvcFwiKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XHJcbiAgICAgICAgICAkKFwiLnNob3ctZmlyZVwiKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgYmFja1RvVG9wKCk7XHJcbiAgICAkKHdpbmRvdykub24oXCJzY3JvbGxcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICBiYWNrVG9Ub3AoKTtcclxuICAgIH0pO1xyXG4gICAgJChcIi5iYWNrLXRvLXRvcFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICQoXCIuc2hvdy1maXJlXCIpLmFkZENsYXNzKFwic2hvd1wiKTtcclxuXHJcbiAgICAgICQoXCJodG1sLGJvZHlcIikuYW5pbWF0ZShcclxuICAgICAgICB7XHJcbiAgICAgICAgICBzY3JvbGxUb3A6IDAsXHJcbiAgICAgICAgfSxcclxuICAgICAgICA1MFxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIFNjcm9sbCB0byBzZWN0aW9uIHdpdGggZXZlbnQgZGVsYWdhdGlvbiBiZXR0ZXIgYXBwcm9hY2hcclxuZG9jdW1lbnRcclxuICAucXVlcnlTZWxlY3RvcihcIi5uYXYtZGVza3RvcF9fbGlzdFwiKVxyXG4gIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAvLyBNYXRjaGluZyBzdHJhdGVneVxyXG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm5hdi1kZXNrdG9wX19saW5rXCIpKSB7XHJcbiAgICAgIGNvbnN0IGlkID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpZCkuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogXCJzbW9vdGhcIiB9KTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBSZW1vdmUgYWN0aXZlIG1lbnUgbW9iaWxlIG9uIHJlc2l6ZSBpZiBpdCBpcyBhY3RpdmUgYnV0IHRoaXMgc2NlbmFyaW8gaXMgbm90IHJlYWwgaW4gcmVhbCBzaXR1YXRpb25cclxuZnVuY3Rpb24gcmVtb3ZlTWVudU9uUmVzaXplSWZBY3RpdmUoZSkge1xyXG4gIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+IDgwMCkge1xyXG4gICAgJChcIi5uYXYtdG9nZ2xlLWJ0biwgLm5hdi1iYWNrZHJvcC1jb250YWluZXJcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgfVxyXG59XHJcblxyXG5yZW1vdmVNZW51T25SZXNpemVJZkFjdGl2ZSgpO1xyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCByZW1vdmVNZW51T25SZXNpemVJZkFjdGl2ZSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gUmVtb3ZlIGFjdGl2ZSBzdGF0ZSBmcm9tIG1vYmlsZSBtZW51IHdpdGgga2V5IGVzY2FwZVxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBmdW5jdGlvbiAoZSkge1xyXG4gIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIubmF2LWJhY2tkcm9wLWNvbnRhaW5lclwiKVxyXG4gICAgICAuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2LXRvZ2dsZS1idG5cIikuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIE5hdiBsaW5rIGVmZmVjdFxyXG5jb25zdCBuYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdi1kZXNrdG9wXCIpO1xyXG5cclxuLy8gUmVmYWN0b3JpbmdcclxuY29uc3QgaGFuZGxlSG92ZXIgPSBmdW5jdGlvbiAoZSwgb3BhY2l0eSkge1xyXG4gIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJuYXYtZGVza3RvcF9fbGlua1wiKSkge1xyXG4gICAgY29uc3QgbGluayA9IGUudGFyZ2V0O1xyXG4gICAgY29uc3Qgc2libGluZ3MgPSBsaW5rXHJcbiAgICAgIC5jbG9zZXN0KFwiLm5hdi1kZXNrdG9wXCIpXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yQWxsKFwiLm5hdi1kZXNrdG9wX19saW5rXCIpO1xyXG5cclxuICAgIHNpYmxpbmdzLmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGlmIChlbCAhPT0gbGluaykge1xyXG4gICAgICAgIGVsLnN0eWxlLm9wYWNpdHkgPSB0aGlzO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbi8vIGRlc2t0b3AgbmF2XHJcbm5hdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsIGhhbmRsZUhvdmVyLmJpbmQoMC4zKSk7XHJcbm5hdi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgaGFuZGxlSG92ZXIuYmluZCgxKSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIFNsaWNrXHJcbiQoXCIuc2xpY2stc2xpZGVyXCIpLnNsaWNrKHtcclxuICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgYXJyb3dzOiB0cnVlLFxyXG4gIGRvdHM6IGZhbHNlLFxyXG4gIGF1dG9wbGF5OiB0cnVlLFxyXG4gIGF1dG9wbGF5U3BlZWQ6IDEwMDAwLFxyXG4gIGNzc0Vhc2U6IFwiZWFzZS1vdXRcIixcclxuICBhc05hdkZvcjogXCIuc2xpZGVyLW5hdlwiLFxyXG4gIHByZXZBcnJvdzogJChcIi5sZWZ0LW5hdi1jdXN0b21cIiksXHJcbiAgbmV4dEFycm93OiAkKFwiLnJpZ2h0LW5hdi1jdXN0b21cIiksXHJcbn0pO1xyXG5cclxuJChcIi5zbGlkZXItbmF2XCIpLnNsaWNrKHtcclxuICBhcnJvd3M6IGZhbHNlLFxyXG4gIHNsaWRlc1RvU2hvdzogMyxcclxuICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICBhc05hdkZvcjogXCIuc2xpY2stc2xpZGVyXCIsXHJcbiAgZG90czogZmFsc2UsXHJcbiAgY2VudGVyTW9kZTogdHJ1ZSxcclxuICBmb2N1c09uU2VsZWN0OiB0cnVlLFxyXG59KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIHBhcnRpY2xlc2pzXHJcbnBhcnRpY2xlc0pTKFwicGFydGljbGVzLWpzXCIsIHtcclxuICBwYXJ0aWNsZXM6IHtcclxuICAgIG51bWJlcjoge1xyXG4gICAgICB2YWx1ZTogNjUsXHJcbiAgICB9LFxyXG4gICAgY29sb3I6IHtcclxuICAgICAgdmFsdWU6IFwiI2RkZFwiLFxyXG4gICAgfSxcclxuICAgIHNoYXBlOiB7XHJcbiAgICAgIHR5cGU6IFwiY2lyY2xlXCIsXHJcbiAgICAgIHN0cm9rZToge1xyXG4gICAgICAgIHdpZHRoOiAxLFxyXG4gICAgICAgIGNvbG9yOiBcIiNkZGRcIixcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBpbWFnZToge1xyXG4gICAgICBzcmM6IFwic29tZSBsaW5rXCIsXHJcbiAgICB9LFxyXG4gICAgb3BhY2l0eToge1xyXG4gICAgICB2YWx1ZTogMC41LFxyXG4gICAgICByYW5kb206IHRydWUsXHJcbiAgICAgIGFuaW06IHtcclxuICAgICAgICBlbmFibGU6IGZhbHNlLFxyXG4gICAgICAgIHNwZWVkOiAxLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHNpemU6IHtcclxuICAgICAgdmFsdWU6IDMsXHJcbiAgICAgIHJhbmRvbTogdHJ1ZSxcclxuICAgICAgYW5pbToge1xyXG4gICAgICAgIGVuYWJsZTogZmFsc2UsXHJcbiAgICAgICAgc3BlZWQ6IDEwMCxcclxuICAgICAgICBzaXplX21pbjogMC4xLFxyXG4gICAgICAgIHN5bmM6IGZhbHNlLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIGxpbmVfbGlua2VkOiB7XHJcbiAgICAgIGVuYWJsZTogdHJ1ZSxcclxuICAgICAgZGlzdGFuY2U6IDE1MCxcclxuICAgICAgY29sb3I6IFwiI2RkZFwiLFxyXG4gICAgICB3aWR0aDogMSxcclxuICAgIH0sXHJcbiAgICBtb3ZlOiB7XHJcbiAgICAgIGVuYWJsZTogdHJ1ZSxcclxuICAgICAgc3BlZWQ6IDMsXHJcbiAgICAgIGRpcmVjdGlvbjogXCJub25lXCIsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgaW50ZXJhY3Rpdml0eToge1xyXG4gICAgZXZlbnRzOiB7XHJcbiAgICAgIG9uaG92ZXI6IHtcclxuICAgICAgICBlbmFibGU6IHRydWUsXHJcbiAgICAgICAgbW9kZTogXCJyZXB1bHNlXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIG9uY2xpY2s6IHtcclxuICAgICAgICBlbmFibGU6IHRydWUsXHJcbiAgICAgICAgbW9kZTogXCJwdXNoXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgbW9kZXM6IHtcclxuICAgICAgcmVwdWxzZToge1xyXG4gICAgICAgIGRpc3RhbmNlOiA1MCxcclxuICAgICAgICBkdXJhdGlvbjogMC40LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICB9LFxyXG59KTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8gQU9TXHJcbi8vIGFuaW1hdGlvblxyXG5BT1MuaW5pdCh7fSk7XHJcblxyXG4vLyBqc29uIGZpbGUgd2l0aCBteSBmZSB3b3Jrc1xyXG5hc3luYyBmdW5jdGlvbiBwb3B1bGF0ZSgpIHtcclxuICBjb25zdCByZXF1ZXN0VVJMID0gXCJodHRwczovL21pbGFueml2YW5vdi5naXRodWIuaW8vRGF0YS93b3Jrcy5qc29uXCI7XHJcbiAgY29uc3QgcmVxdWVzdCA9IG5ldyBSZXF1ZXN0KHJlcXVlc3RVUkwpO1xyXG5cclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChyZXF1ZXN0KTtcclxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgcG9wdWxhdGVTa2lsbHMoZGF0YSk7XHJcbiAgcG9wdWxhdGVXb3JrcyhkYXRhKTtcclxufVxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBza2lsbHMgZGF0YVxyXG5mdW5jdGlvbiBwb3B1bGF0ZVNraWxscyhkYXRhKSB7XHJcbiAgY29uc3QgY29udGFpbmVyU2tpbGxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5za2lsbHMtY29udGFpbmVyLWljb25zXCIpO1xyXG4gIGNvbnN0IHNraWxscyA9IGRhdGEuc2tpbGxzO1xyXG5cclxuICBsZXQgb3V0cHV0ID0gXCJcIjtcclxuXHJcbiAgZm9yIChjb25zdCBza2lsbCBvZiBza2lsbHMpIHtcclxuICAgIG91dHB1dCArPSBgXHJcbiAgICAgIDxkaXYgY2xhc3M9XCJza2lsbC1pY29uXCI+XHJcbiAgICAgICAgPGkgXHJcbiAgICAgICAgICBjbGFzcz1cIiR7c2tpbGwuaWNvbkNsYXNzfVwiXHJcbiAgICAgICAgICBkYXRhLWFvcz1cImZhZGUtdXBcIj5cclxuICAgICAgICA8L2k+XHJcbiAgICAgICAgPHA+JHtza2lsbC5pY29uVGl0bGV9PC9wPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIGA7XHJcbiAgfVxyXG5cclxuICBjb250YWluZXJTa2lsbHMuaW5uZXJIVE1MID0gb3V0cHV0O1xyXG59XHJcblxyXG4vLyB3b3JrcyBkYXRhXHJcbmZ1bmN0aW9uIHBvcHVsYXRlV29ya3MoZGF0YSkge1xyXG4gIGNvbnN0IHNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RzX19jb250ZW50XCIpO1xyXG4gIGNvbnN0IHdvcmtzID0gZGF0YS53b3JrcztcclxuXHJcbiAgZm9yIChjb25zdCB3b3JrIG9mIHdvcmtzKSB7XHJcbiAgICBjb25zdCBjb250YWluZXJQcm9qZWN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBjb250YWluZXJQcm9qZWN0cy5jbGFzc05hbWUgPSBcInByb2plY3RzX19yb3cgcHJvamVjdHNfX3Jvdy0tcmV2ZXJzZVwiO1xyXG4gICAgY29udGFpbmVyUHJvamVjdHMuc2V0QXR0cmlidXRlKFwiZGF0YS1hb3NcIiwgXCJmbGlwLWxlZnRcIik7XHJcblxyXG4gICAgLy9cclxuICAgIGNvbnN0IHByb2plY3RSb3dJbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgcHJvamVjdFJvd0ltZy5jbGFzc0xpc3QuYWRkKFwicHJvamVjdHNfX3Jvdy0taW1nXCIpO1xyXG4gICAgY29udGFpbmVyUHJvamVjdHMuYXBwZW5kQ2hpbGQocHJvamVjdFJvd0ltZyk7XHJcblxyXG4gICAgY29uc3QgcHJvamVjdEFuY2hvckxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICAgIHByb2plY3RBbmNob3JMaW5rLmNsYXNzTmFtZSA9IFwibWFnbmlmaWMtcG9wdXAtbGlua1wiO1xyXG4gICAgcHJvamVjdEFuY2hvckxpbmsuaHJlZiA9IHdvcmsubGlua1NyYztcclxuICAgIHByb2plY3RBbmNob3JMaW5rLnJlbCA9IFwiZG5zLXByZWZldGNoXCI7XHJcbiAgICBwcm9qZWN0QW5jaG9yTGluay50YXJnZXQgPSBcIl9ibGFua1wiO1xyXG5cclxuICAgIGNvbnN0IGltZ1Byb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xyXG4gICAgaW1nUHJvamVjdC5zcmMgPSB3b3JrLnNyYztcclxuICAgIGltZ1Byb2plY3Quc2V0QXR0cmlidXRlKFwibG9hZGluZ1wiLCBcImxhenlcIik7XHJcblxyXG4gICAgLy9cclxuICAgIGNvbnN0IHByb2plY3RSb3dUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHByb2plY3RSb3dUZXh0LmNsYXNzTmFtZSA9IFwicHJvamVjdHNfX3Jvdy0tdGV4dFwiO1xyXG4gICAgY29udGFpbmVyUHJvamVjdHMuYXBwZW5kQ2hpbGQocHJvamVjdFJvd1RleHQpO1xyXG5cclxuICAgIGNvbnN0IHRleHRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgdGV4dENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwidGV4dC1jb250YWluZXJcIik7XHJcbiAgICBwcm9qZWN0Um93VGV4dC5hcHBlbmRDaGlsZCh0ZXh0Q29udGFpbmVyKTtcclxuXHJcbiAgICBjb25zdCBoM1RpdGxlUm93VGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcclxuICAgIGgzVGl0bGVSb3dUZXh0LmNsYXNzTmFtZSA9IFwic2VjdGlvbi1oMy10aXRsZSBwcm9qZWN0LWNvbnRhaW5lci0tdGl0bGVcIjtcclxuICAgIGgzVGl0bGVSb3dUZXh0LnRleHRDb250ZW50ID0gd29yay50aXRsZTtcclxuICAgIHRleHRDb250YWluZXIuYXBwZW5kQ2hpbGQoaDNUaXRsZVJvd1RleHQpO1xyXG5cclxuICAgIGNvbnN0IHJvd1RleHREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgcm93VGV4dERpdi5jbGFzc0xpc3QuYWRkKFwidGV4dC1jb250YWluZXItLWRlc2NyaXB0aW9uXCIpO1xyXG4gICAgdGV4dENvbnRhaW5lci5hcHBlbmRDaGlsZChyb3dUZXh0RGl2KTtcclxuXHJcbiAgICBjb25zdCByb3dUZXh0UGFyYWdyYXBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICByb3dUZXh0UGFyYWdyYXBoLmNsYXNzTmFtZSA9IFwicGFyYWdyYXBoLXByaW1hcnktMTYgcGFyYWdyYXBoLXRleHRcIjtcclxuICAgIHJvd1RleHRQYXJhZ3JhcGgudGV4dENvbnRlbnQgPSB3b3JrLmJvZHk7XHJcbiAgICByb3dUZXh0RGl2LmFwcGVuZENoaWxkKHJvd1RleHRQYXJhZ3JhcGgpO1xyXG5cclxuICAgIGNvbnN0IHJvd1RleHRUaW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgICByb3dUZXh0VGltZS5jbGFzc0xpc3QuYWRkKFwicGFyYWdyYXBoLXRpbWVcIik7XHJcbiAgICByb3dUZXh0VGltZS50ZXh0Q29udGVudCA9IHdvcmsucHJvamVjdFRpbWU7XHJcbiAgICByb3dUZXh0RGl2LmFwcGVuZENoaWxkKHJvd1RleHRUaW1lKTtcclxuXHJcbiAgICBjb25zdCBza2lsbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBza2lsbENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwic2tpbGwtY29udGFpbmVyXCIpO1xyXG4gICAgcm93VGV4dERpdi5hcHBlbmRDaGlsZChza2lsbENvbnRhaW5lcik7XHJcblxyXG4gICAgY29uc3Qgcm93VGV4dFN0cm9uZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgcm93VGV4dFN0cm9uZy5jbGFzc0xpc3QuYWRkKFwicGFyYWdyYXBoLXN0cm9uZ1wiKTtcclxuICAgIHJvd1RleHRTdHJvbmcudGV4dENvbnRlbnQgPSBcIlNraWxsIHVzZWQ6XCI7XHJcbiAgICBza2lsbENvbnRhaW5lci5hcHBlbmRDaGlsZChyb3dUZXh0U3Ryb25nKTtcclxuXHJcbiAgICBjb25zdCBza2lsbExpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidWxcIik7XHJcbiAgICBza2lsbExpc3QuY2xhc3NMaXN0LmFkZChcImxpc3QtaWNvbi1jb250YWluZXJcIik7XHJcbiAgICBza2lsbENvbnRhaW5lci5hcHBlbmRDaGlsZChza2lsbExpc3QpO1xyXG5cclxuICAgIHByb2plY3RSb3dJbWcuYXBwZW5kQ2hpbGQocHJvamVjdEFuY2hvckxpbmspO1xyXG4gICAgcHJvamVjdEFuY2hvckxpbmsuYXBwZW5kQ2hpbGQoaW1nUHJvamVjdCk7XHJcblxyXG4gICAgY29uc3QgYnRuVGV4dFJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG4gICAgYnRuVGV4dFJvdy5jbGFzc05hbWUgPSBcInBvcHVwLWxpbmsgYnRuIGJ0bi0tc2l6ZSBidG4tLXRoZW1lXCI7XHJcbiAgICBidG5UZXh0Um93LmhyZWYgPSB3b3JrLmxpbmtTcmM7XHJcbiAgICBidG5UZXh0Um93LnRhcmdldCA9IFwiX2JsYW5rXCI7XHJcbiAgICBidG5UZXh0Um93LnJlbCA9IFwiZG5zLXByZWZldGNoXCI7XHJcbiAgICBidG5UZXh0Um93LnRleHRDb250ZW50ID0gXCJWaWV3IEl0IEhlcmVcIjtcclxuICAgIHRleHRDb250YWluZXIuYXBwZW5kQ2hpbGQoYnRuVGV4dFJvdyk7XHJcblxyXG4gICAgc2VjdGlvbi5hcHBlbmRDaGlsZChjb250YWluZXJQcm9qZWN0cyk7XHJcblxyXG4gICAgLy8gd29yayBza2lsbFxyXG4gICAgY29uc3Qgc2tpbGxzVXNlZCA9IHdvcmsudGVjaG5vbG9naWVzVXNlZDtcclxuICAgIGZvciAoY29uc3Qgc2tpbGwgb2Ygc2tpbGxzVXNlZCkge1xyXG4gICAgICBjb25zdCBsaXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcclxuICAgICAgY29uc3QgbGlzdEljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaVwiKTtcclxuICAgICAgbGlzdEljb24uY2xhc3NOYW1lID0gc2tpbGwuc3ZnSWNvbiArIFwiIGRldmljb25cIjtcclxuICAgICAgc2tpbGxMaXN0LmFwcGVuZENoaWxkKGxpc3RJdGVtKTtcclxuICAgICAgbGlzdEl0ZW0uYXBwZW5kQ2hpbGQobGlzdEljb24pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxucG9wdWxhdGUoKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLyBTZXQgZGF0ZVxyXG5jb25zdCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpO1xyXG5kYXRlLmlubmVySFRNTCA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcclxuIl19
