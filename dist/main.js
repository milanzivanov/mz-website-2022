function e(e){window.innerWidth>800&&$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")}jQuery((function(){"use strict";if($(".nav-toggle-btn").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").toggleClass("active")})),$(".nav-backdrop-container").on("click",(function(e){$(".nav-toggle-btn, .nav-backdrop-container").removeClass("active")})),$(".magnific-popup-link").magnificPopup({type:"image",gallery:{enabled:!0},image:{titleSrc:"title"}}),$(".back-to-top").length){const e=100,t=function(){$(window).scrollTop()>e?$(".back-to-top").addClass("show"):($(".back-to-top").removeClass("show"),$(".show-fire").removeClass("show"))};t(),$(window).on("scroll",(function(){t()})),$(".back-to-top").on("click",(function(e){e.preventDefault(),$(".show-fire").addClass("show"),$("html,body").animate({scrollTop:0},50)}))}})),document.querySelector(".nav-desktop__list").addEventListener("click",(function(e){if(e.preventDefault(),e.target.classList.contains("nav-desktop__link")){const t=e.target.getAttribute("href");document.querySelector(t).scrollIntoView({behavior:"smooth"})}})),e(),window.addEventListener("resize",e),document.addEventListener("keydown",e=>{"Escape"===e.key&&(document.querySelector(".nav-backdrop-container").classList.remove("active"),document.querySelector(".nav-toggle-btn").classList.remove("active"))});const t=document.querySelector(".nav-desktop"),n=function(e,t){if(e.target.classList.contains("nav-desktop__link")){const t=e.target;t.closest(".nav-desktop").querySelectorAll(".nav-desktop__link").forEach(e=>{e!==t&&(e.style.opacity=this)})}};t.addEventListener("mouseover",n.bind(.3)),t.addEventListener("mouseout",n.bind(1));const o=document.querySelector(".header"),s=document.querySelector("main"),c=o.getBoundingClientRect().height,a=function(e){const[t]=e;t.isIntersecting?o.classList.remove("sticky"):o.classList.add("sticky")},i=new IntersectionObserver(a,{root:null,threshold:0,rootMargin:`-${c}px`});async function l(){const e=new Request("https://milanzivanov.github.io/Data/works.json"),t=await fetch(e),n=await t.json();r(n),d(n)}function r(e){const t=document.querySelector(".skills-container-icons"),n=e.skills;let o="";for(const e of n)o+=`\n      <div class="skill-icon">\n        <i \n          class="${e.iconClass}"\n          data-aos="fade-up">\n        </i>\n        <p>${e.iconTitle}</p>\n      </div>\n    `;t.innerHTML=o}function d(e){const t=document.querySelector(".projects__content"),n=e.works;for(const e of n){const n=document.createElement("div");n.className="projects__row",n.setAttribute("data-aos","flip-left");const o=document.createElement("div");o.classList.add("projects__row--img"),n.appendChild(o);const s=document.createElement("a");s.className="magnific-popup-link",s.href=e.linkSrc,s.rel="dns-prefetch",s.target="_blank";const c=document.createElement("img");c.src=e.src,c.setAttribute("loading","lazy");const a=document.createElement("div");a.className="projects__row--text",n.appendChild(a);const i=document.createElement("div");i.classList.add("text-container"),a.appendChild(i);const l=document.createElement("h3");l.className="section-h3-title project-container--title",l.textContent=e.title,i.appendChild(l);const r=document.createElement("div");r.classList.add("text-container--description"),i.appendChild(r);const d=document.createElement("p");d.className="paragraph-text paragraph-text--border-bottom",d.textContent=e.body,r.appendChild(d);const p=document.createElement("p");p.classList.add("paragraph-text"),p.textContent=e.projectTime,r.appendChild(p);const u=document.createElement("div");u.classList.add("skill-container"),r.appendChild(u);const m=document.createElement("p");m.classList.add("paragraph-strong"),m.textContent="Skill used:",u.appendChild(m);const v=document.createElement("ul");v.classList.add("list-icon-container"),u.appendChild(v),o.appendChild(s),s.appendChild(c);const h=document.createElement("a");h.className="popup-link btn btn--size btn--theme",h.href=e.linkSrc,h.target="_blank",h.rel="dns-prefetch",h.textContent="View It Here",i.appendChild(h),t.appendChild(n);const g=e.technologiesUsed;for(const e of g){const t=document.createElement("li"),n=document.createElement("i");n.className=e.svgIcon+" devicon",v.appendChild(t),t.appendChild(n)}}}i.observe(s),$(".slick-slider").slick({slidesToShow:1,arrows:!0,dots:!1,autoplay:!0,autoplaySpeed:1e4,cssEase:"ease-out",asNavFor:".slider-nav",prevArrow:$(".left-nav-custom"),nextArrow:$(".right-nav-custom")}),$(".slider-nav").slick({arrows:!1,slidesToShow:3,slidesToScroll:1,asNavFor:".slick-slider",dots:!1,centerMode:!0,focusOnSelect:!0}),AOS.init({}),l();const p=document.getElementById("date");p.innerHTML=(new Date).getFullYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
